[tox]
min_version = 4.6.3
env_list =
  lint
  docs
  deps
isolated_build = true
requires =
  tox >= 4.6.3
  tox-uv >= 1.16.0
  setuptools >= 65.3.0 # editable installs

[testenv]
description =
  Run the tests under {base_python}
pass_env =
  CURL_CA_BUNDLE  # https proxies, https://github.com/tox-dev/tox/issues/1437
  FORCE_COLOR
  HOME
  LANG
  LC_*
  NO_COLOR
  PYTEST_*  # allows developer to define their own preferences
  PYTHON*  # PYTHONPYCACHEPREFIX, PYTHONIOENCODING, PYTHONBREAKPOINT,...
  PY_COLORS
  RTD_TOKEN
  REQUESTS_CA_BUNDLE  # https proxies
  SETUPTOOLS_SCM_DEBUG
  SSL_CERT_FILE  # https proxies
  SSH_AUTH_SOCK # may be needed by git
  UV_*
# recreate = True
set_env =
  # Avoid runtime warning that might affect our devel testing
  devel: ANSIBLE_DEVEL_WARNING = false
  COVERAGE_FILE = {env:COVERAGE_FILE:{env_dir}/.coverage.{env_name}}
  COVERAGE_PROCESS_START={tox_ini_dir}/pyproject.toml
  PIP_CONSTRAINT = {tox_ini_dir}/.config/constraints.txt
  PIP_DISABLE_PIP_VERSION_CHECK = 1
  PRE_COMMIT_COLOR = always
  # Number of expected test passes, safety measure for accidental skip of
  # tests. Update value if you add/remove tests. (tox-extra)
  FORCE_COLOR = 1
package = editable

[testenv:lint]
description = Run all linters
# pip compile includes python version in output constraints, so we want to
# be sure that version does not change randomly.
deps =
  pre-commit>=4.0.1
  pre-commit-uv>=4.1.4
  setuptools>=51.1.1
  pytest>=7.2.2  # to updated schemas
skip_install = true
commands_pre =
commands =
  {env_python} -m pre_commit run --all-files --show-diff-on-failure {pos_args:}
pass_env =
  {[testenv]pass_env}
  PRE_COMMIT_HOME
set_env =
  {[testenv]set_env}
  # avoid messing pre-commit with out own constraints
  PIP_CONSTRAINT=

[testenv:deps]
description = Bump all test dependencies
# we reuse the lint environment
env_dir = {tox_work_dir}/lint
skip_install = true
base_python = python3.10
deps =
  {[testenv:lint]deps}
setenv =
  # without his upgrade would likely not do anything
  PIP_CONSTRAINT = /dev/null
commands_pre =
commands =
  -pre-commit run --all-files --show-diff-on-failure --hook-stage manual deps
  # Update pre-commit hooks
  -pre-commit autoupdate

[testenv:docs]
description = Builds docs
set_env =
  # Disable colors until markdown-exec supports it:
  # https://github.com/pawamoy/markdown-exec/issues/11
  NO_COLOR = 1
  TERM = dump
  # https://squidfunk.github.io/mkdocs-material/plugins/requirements/image-processing/#troubleshooting
  DYLD_FALLBACK_LIBRARY_PATH = /opt/homebrew/lib:{env:LD_LIBRARY_PATH}
skip_install = false
use_develop = true
commands =
  mkdocs {pos_args:build --strict --site-dir=_readthedocs/html/}
